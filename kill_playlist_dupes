#!/usr/bin/env python3
#
# Delete duplicate songs in googlePlay playlists
#   Authenticate an account
#   Get all playlists
#   Loop over playlists and delete duplicates (prompt before deleting)
#
# Original script: https://github.com/maxkirchoff/google-music-dupe-killer
import sys

from gmusicapi import Mobileclient

ignorePlaylists = ["test1"]


def get_dupes_in_playlist(playlist):
    duplicate_Ids = []
    unique_trackIds = []

    # Generate a list of unique tracks
    for track in playlist['tracks']:
        if track['trackId'] not in unique_trackIds:
            unique_trackIds.append(track['trackId'])

    # Generate a list of duplicate tracks
    for atrack in unique_trackIds:
        count = 0
        for btrack in playlist['tracks']:
            # print(atrack + " b " + btrack['trackId'] )
            if atrack == btrack['trackId']:
                count += 1
                if count > 1:
                    duplicate_Ids.append(btrack['id'])

    return duplicate_Ids


def query_yes_no(question, default="yes"):
    """Ask a yes/no question via input() and return their answer.

    "question" is a string that is presented to the user.
    "default" is the presumed answer if the user just hits <Enter>.
        It must be "yes" (the default), "no" or None (meaning
        an answer is required of the user).

    The "answer" return value is one of "yes" or "no".
    """
    valid = {"yes": True,   "y": True,  "ye": True,
             "no": False,     "n": False}
    if default is None:
        prompt = " [y/n] "
    elif default == "yes":
        prompt = " [Y/n] "
    elif default == "no":
        prompt = " [y/N] "
    else:
        raise ValueError("invalid default answer: '%s'" % default)

    while True:
        sys.stdout.write(question + prompt)
        if sys.version_info[0] < 3:
            choice = raw_input().lower()
        else:
            choice = input().lower()
        if default is not None and choice == '':
            return valid[default]
        elif choice in valid:
            return valid[choice]
        else:
            sys.stdout.write("Please respond with 'yes' or 'no' "
                             "(or 'y' or 'n').\n")


api = Mobileclient()
# Need to do this once to set up oauth - it returns a auth string
# api.perform_oauth()
# Then plug the auth string into the oauth_loging below.  It's the wrong arg
#   but it will provide one or more device Ids that you need for the arg

logged_in = api.oauth_login("a4fba5e0")

if logged_in:
    print("Successfully logged in. Beginning duplicate detection process.")

    all_playlists = api.get_all_user_playlist_contents()

    for playlist in all_playlists:
        if playlist['name'] in ignorePlaylists:
            print("Ignoreing playlist " + playlist['name'])
        else:
            duplicate_tracks = get_dupes_in_playlist(playlist)
            if len(duplicate_tracks) > 0:
                if query_yes_no("Found " + str(len(duplicate_tracks)) +
                                " duplicate tracks in playlist " +
                                playlist['name'] + ". Delete duplicates?",
                                "yes"):
                    deleted_track_ids = []
                    deleted_track_ids += api.remove_entries_from_playlist(duplicate_tracks)
                    print("Successfully deleted " + str(len(deleted_track_ids)) + " tracks of " + playlist['name'])
                else:
                    print("Skipping " + playlist['name'])

    print("Thank you!")
